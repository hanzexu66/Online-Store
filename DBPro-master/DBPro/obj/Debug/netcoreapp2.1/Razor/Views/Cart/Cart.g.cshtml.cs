#pragma checksum "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b6e9d351a482763e01a1cee68c69b843c64b8d1a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Cart_Cart), @"mvc.1.0.view", @"/Views/Cart/Cart.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Cart/Cart.cshtml", typeof(AspNetCore.Views_Cart_Cart))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\2--practice\vs\c#\DBPro\DBPro\Views\_ViewImports.cshtml"
using DBPro;

#line default
#line hidden
#line 2 "E:\2--practice\vs\c#\DBPro\DBPro\Views\_ViewImports.cshtml"
using DBPro.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b6e9d351a482763e01a1cee68c69b843c64b8d1a", @"/Views/Cart/Cart.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"22a40c1456db73c9a8353b2e70a1daa81653e306", @"/Views/_ViewImports.cshtml")]
    public class Views_Cart_Cart : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<List<CartViewModels>>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
  
    ViewData["Title"] = "Cart";

#line default
#line hidden
            BeginContext(83, 393, true);
            WriteLiteral(@"
<h2 class=""ui horizontal divider header""><i class=""shopping cart icon""></i>购物车</h2>
<div class=""ui grid container"" id=""nonemessage"" style=""display:none"">
    <br>
    <div class=""ui icon message"">
        <i class=""cart plus icon""></i>
        <div class=""content"">
            <div class=""header"">你的购物车中没有商品 </div>
            <p>快去选择喜欢的商品吧！</p>
        </div>
    </div>
</div>
");
            EndContext();
            BeginContext(486, 1278, true);
            WriteLiteral(@"<div class=""ui grid container"">
    <div class=""one wide column""></div>
    <div class=""sixteen wide column"">
        <div class=""ui red segment"">
            <div class=""ui red segment"">
                <div class=""ui hiden grid"">
                    <div class=""row"">
                        <div class=""three wide column"">
                            <div class=""ui checkbox"">
                                <input type=""checkbox"" id=""all"" onclick=""Allcheckout(event)"">
                                <label></label>
                            </div>
                        </div>
                        <div class=""five wide hidden column"">
                            商品信息
                        </div>
                        <div class=""two wide column"">
                            单价
                        </div>
                        <div class=""two wide column"">
                            数量
                        </div>
                        <div class=""two wide column"">
 ");
            WriteLiteral("                           金额\r\n                        </div>\r\n                        <div class=\"two wide column\">\r\n                            操作\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n");
            EndContext();
#line 49 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
              
                int ItemCount = 0;
                foreach(var list in Model)
                {
                    ItemCount += list.Count();
                }
                for (int i = 0; i < @Model.Count(); ++i)
                {

#line default
#line hidden
            BeginContext(2023, 48, true);
            WriteLiteral("                    <div class=\"ui red  segment\"");
            EndContext();
            BeginWriteAttribute("id", " id=", 2071, "", 2108, 1);
#line 57 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
WriteAttributeValue("", 2075, string.Format("depart{0:D3}", i), 2075, 33, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2108, 293, true);
            WriteLiteral(@">
                        <div class=""ui hiden grid"">
                            <div class=""row"">
                                <div class=""three wide column"">
                                    <div class=""ui checkbox"">
                                        <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=", 2401, "", 2435, 1);
#line 62 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
WriteAttributeValue("", 2405, string.Format("box{0:D3}", i), 2405, 30, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2435, 172, true);
            WriteLiteral(" onclick=\"Departcheckout(event)\">\r\n                                        <label></label>\r\n                                    </div>\r\n                                    ");
            EndContext();
            BeginContext(2608, 20, false);
#line 65 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
                               Write(Model[i][0].shopName);

#line default
#line hidden
            EndContext();
            BeginContext(2628, 163, true);
            WriteLiteral("\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"ui hiden grid\">\r\n");
            EndContext();
#line 70 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
                             for (int j = 0; j < @Model[i].Count(); ++j)
                            {

#line default
#line hidden
            BeginContext(2896, 48, true);
            WriteLiteral("                                <div class=\"row\"");
            EndContext();
            BeginWriteAttribute("id", " id=", 2944, "", 2989, 1);
#line 72 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
WriteAttributeValue("", 2948, string.Format("goods{0:D3}{1:D3}", i, j), 2948, 41, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2989, 286, true);
            WriteLiteral(@">
                                    <div class=""three wide column"">
                                        <div class=""ui child checkbox"">
                                            <div class=""ui checkbox"">
                                                <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=", 3275, "", 3318, 1);
#line 76 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
WriteAttributeValue("", 3279, string.Format("box{0:D3}{1:D3}", i, j), 3279, 39, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3318, 243, true);
            WriteLiteral(" onclick=\"Goodscheckout(event)\">\r\n                                                <label></label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <img");
            EndContext();
            BeginWriteAttribute("src", " src=", 3561, "", 3588, 1);
#line 80 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
WriteAttributeValue("", 3566, Model[i][j].imagePath, 3566, 22, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3588, 190, true);
            WriteLiteral(" width=\"50%\">\r\n                                    </div>\r\n                                    <div class=\"five wide hidden column\" id=\"name001001\">\r\n                                        ");
            EndContext();
            BeginContext(3779, 20, false);
#line 83 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
                                   Write(Model[i][j].itemName);

#line default
#line hidden
            EndContext();
            BeginContext(3799, 159, true);
            WriteLiteral("\r\n                                    </div>\r\n                                    <div class=\"two wide column\">\r\n                                        <label");
            EndContext();
            BeginWriteAttribute("id", " id=", 3958, "", 4003, 1);
#line 86 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
WriteAttributeValue("", 3962, string.Format("price{0:D3}{1:D3}", i, j), 3962, 41, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4003, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(4005, 21, false);
#line 86 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
                                                                                       Write(Model[i][j].itemPrice);

#line default
#line hidden
            EndContext();
            BeginContext(4026, 292, true);
            WriteLiteral(@"</label>
                                    </div>
                                    <div class=""two wide column"">
                                        <div class=""ui mini icon input"" style=""width:80%"">
                                            <input type=""text"" placeholder=""数量""");
            EndContext();
            BeginWriteAttribute("id", " id=", 4318, "", 4364, 1);
#line 90 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
WriteAttributeValue("", 4322, string.Format("number{0:D3}{1:D3}", i, j), 4322, 42, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4364, 244, true);
            WriteLiteral(" oninput=\"OnInput (event)\" value=\"1\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"two wide column\">\r\n                                        <label");
            EndContext();
            BeginWriteAttribute("id", " id=", 4608, "", 4653, 1);
#line 94 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
WriteAttributeValue("", 4612, string.Format("total{0:D3}{1:D3}", i, j), 4612, 41, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4653, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(4655, 21, false);
#line 94 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
                                                                                       Write(Model[i][j].itemPrice);

#line default
#line hidden
            EndContext();
            BeginContext(4676, 231, true);
            WriteLiteral("</label>\r\n                                    </div>\r\n                                    <div class=\"two wide column\">\r\n                                        <button class=\"circular ui icon button\" onclick=\"Deletegoods(this.id)\"");
            EndContext();
            BeginWriteAttribute("id", " id=", 4907, "", 4953, 1);
#line 97 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
WriteAttributeValue("", 4911, string.Format("delete{0:D3}{1:D3}", i, j), 4911, 42, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginWriteAttribute("text", " text=\"", 4953, "\"", 4979, 1);
#line 97 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
WriteAttributeValue("", 4960, Model[i][j].itemID, 4960, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4980, 130, true);
            WriteLiteral(">\r\n                                            <i class=\"close icon\"></i>\r\n                                            <div hidden");
            EndContext();
            BeginWriteAttribute("id", " id=", 5110, "", 5154, 1);
#line 99 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
WriteAttributeValue("", 5114, string.Format("myid{0:D3}{1:D3}", i, j), 5114, 40, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5154, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(5156, 18, false);
#line 99 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
                                                                                               Write(Model[i][j].itemID);

#line default
#line hidden
            EndContext();
            BeginContext(5174, 143, true);
            WriteLiteral("</div>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n");
            EndContext();
#line 103 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
                            }

#line default
#line hidden
            BeginContext(5348, 60, true);
            WriteLiteral("                        </div>\r\n                    </div>\r\n");
            EndContext();
#line 106 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
                }
            

#line default
#line hidden
            BeginContext(5442, 11887, true);
            WriteLiteral(@"
        </div>
        <div class=""ui red segment"">
            <div class=""ui hiden grid"">
                <div class=""row"">
                    <div class=""two wide column"">
                        <div class=""ui checkbox"">
                            <input type=""checkbox"" onclick=""Allcheckout(event) "" id=""all2"">
                            <label>全选</label>
                        </div>
                    </div>
                    <div class=""six wide hidden column"">
                        <button class=""compact ui button"" onclick=""Deleteselect(this.id)"" id=""deleteselect"">删除 </button>
                    </div>
                    <div class=""three wide column"">
                        已选商品
                        <div class=""ui red basic large label"" id=""totalnum"">0</div>
                        件
                    </div>
                    <div class=""three wide column"">
                        合计
                        <div class=""ui red basic large label"" id=""totalprice"">");
            WriteLiteral(@"0</div>
                        元
                    </div>
                    <div class=""two wide column"">
                        <button class=""compact ui button"" disabled=""disabled"" id=""buying"" onclick=""Purchase()"">购买 </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<div class=""ui basic modal"">
    <div class=""ui icon header"">
        <i class=""shop icon""></i><font style=""vertical-align: inherit;"">
            <font style=""vertical-align: inherit;"">
                交易
            </font>
        </font>
    </div>
    <div class=""content"" align=""center"">
        <p><font style=""vertical-align: inherit;""><font style=""vertical-align: inherit;"">你确定要购买选中的这些商品并生成交易信息吗？</font></font></p>
    </div>
    <div class=""actions"">
        <div class=""ui red basic cancel inverted button"">
            <i class=""remove icon""></i>
            再想想
        </div>
        <a class=""ui green ok inverted button""  onclick=""Topay()"">");
            WriteLiteral(@"
            <i class=""checkmark icon""></i>
            是的，就是这些
        </a>
    </div>
</div>
<script>
    var goodsnumber = 0;
    var pricenumber = 0;
    var finalnum = document.getElementById(""totalnum"");
    var finalprice = document.getElementById(""totalprice"");
    var confirmbuy = document.getElementById(""buying"");
    function OnInput(event) {
        var beforeprice = 0;

        var key = event.target.id.substr(6, 6);
        var totalprice = document.getElementById(""total"" + key);
        var theprice = document.getElementById(""price"" + key).innerHTML;
        var re = /^[0-9]+$/;
        var thecheck = document.getElementById(""box"" + key);
        if ((isNaN(event.target.value) && !re.test(event.target.value))) {
            event.target.value = 1;
        }
        if (event.target.value == 0) {
            event.target.value = 1;
        }
        if (event.target.value != """") {
            beforeprice = (parseFloat(totalprice.innerHTML)).toFixed(2);
            tot");
            WriteLiteral(@"alprice.innerHTML = (parseFloat(theprice) * parseFloat(event.target.value)).toFixed(2);

        }
        else {
            beforeprice = (parseFloat(totalprice.innerHTML)).toFixed(2);
            totalprice.innerHTML = (parseFloat(theprice)).toFixed(2);
        }
        if (thecheck.checked) {
            finalprice.innerHTML = (pricenumber - beforeprice + parseFloat(totalprice.innerHTML)).toFixed(2);           
            pricenumber = (parseFloat(finalprice.innerHTML)).toFixed(2);

        }
    }
    function Departcheckout(event) {
        var mydepart = event.target.id.substr(3, 3);
        var getCheckBox = document.getElementById(""depart"" + mydepart).getElementsByTagName('input');
        for (var i = 1; i < getCheckBox.length; i++) {
            whichObj = getCheckBox[i];
            if (whichObj.type == ""checkbox"") {

                if (event.target.checked && !whichObj.checked) {
                    confirmbuy.disabled = false;
                    goodsnumber++;
        ");
            WriteLiteral(@"            var key = whichObj.id.substr(3, 6);
                    var totalprice = document.getElementById(""total"" + key);
                    pricenumber =( parseFloat(pricenumber) + (parseFloat(totalprice.innerHTML))).toFixed(2);

                }
                else if (!event.target.checked && whichObj.checked) {
                    goodsnumber--;
                    var key = whichObj.id.substr(3, 6);
                    var totalprice = document.getElementById(""total"" + key);
                    pricenumber = (parseFloat(pricenumber) - (parseFloat(totalprice.innerHTML))).toFixed(2);
                }
                whichObj.checked = event.target.checked;
            }
        }
        //修改部分
        if (event.target.checked) {
            CheckAll();
        }
        else {
            document.getElementById(""all"").checked = false;
            document.getElementById(""all2"").checked = false;
        }
        //修改结束
        finalnum.innerHTML = goodsnumber;
        final");
            WriteLiteral(@"price.innerHTML = (parseFloat(pricenumber)).toFixed(2);
        if (goodsnumber == 0) {
            confirmbuy.disabled = true;
        }
    }
    function Allcheckout(event) {
        var mydepart = event.target.id.substr(3, 3);
        var re = /^[0-9]+.?[0-9]*$/;
        var getCheckBox = document.getElementsByTagName('input');
        for (var i = 0; i < getCheckBox.length; i++) {
            whichObj = getCheckBox[i];
            if (whichObj.type == ""checkbox"") {
                if (event.target.checked && re.test(whichObj.id.substr(-4, 1)) && !whichObj.checked) {
                    confirmbuy.disabled = false;
                    goodsnumber++;
                    var key = whichObj.id.substr(3, 6);
                    var totalprice = document.getElementById(""total"" + key);

                    pricenumber = parseFloat(pricenumber) + parseFloat(totalprice.innerHTML);
 
                }
                else if (!event.target.checked && re.test(whichObj.id.substr(-4, 1)) && which");
            WriteLiteral(@"Obj.checked) {
                    goodsnumber--;
                    confirmbuy.disabled = true;
                    var key = whichObj.id.substr(3, 6);
                    var totalprice = document.getElementById(""total"" + key);
                    pricenumber = (parseFloat(pricenumber) - parseFloat(totalprice.innerHTML)).toFixed(2);
                }
                whichObj.checked = event.target.checked;
            }
        }
        finalnum.innerHTML = goodsnumber;
        finalprice.innerHTML = pricenumber;
    }
    function Goodscheckout(event) {
        var key = event.target.id.substr(3, 6);
        var totalprice = document.getElementById(""total"" + key);

        if (event.target.checked) {
            goodsnumber++;
            pricenumber = (parseFloat(pricenumber) + parseFloat(totalprice.innerHTML)).toFixed(2);
            confirmbuy.disabled = false;
            CheckSameDepart(event.target.id.substr(3, 3));
        }
        else {
            goodsnumber--;
      ");
            WriteLiteral(@"      pricenumber = (parseFloat(pricenumber) - parseFloat(totalprice.innerHTML)).toFixed(2);
            //修改部分
            var fatherkey = event.target.id.substr(3, 3);
            var fatherdepart = document.getElementById(""box"" + fatherkey);
            fatherdepart.checked = event.target.checked;
            document.getElementById(""all"").checked = false;
            document.getElementById(""all2"").checked = false;

            //修改结束
        }
        finalnum.innerHTML = goodsnumber;
        finalprice.innerHTML = pricenumber;
        if (goodsnumber == 0) {
            confirmbuy.disabled = true;
        }
    }
    function Deletegoods(id) {

        var key = id.substr(6, 6);
        var mydepart = id.substr(6, 3);
        var thecheck = document.getElementById(""box"" + key);
        var totalprice = document.getElementById(""total"" + key);
        var deletegoods = document.getElementById(""goods"" + key);
        var item_id = document.getElementById(id).getElementsByTagName(""div");
            WriteLiteral(@""")[0].innerHTML;

        //document.getElementById(id).getAttributeNames()[""name""];

        if (thecheck.checked) {
            pricenumber = pricenumber - parseFloat(totalprice.innerHTML);
            finalprice.innerHTML = pricenumber;
            goodsnumber--;
            if (goodsnumber == 0) {
                confirmbuy.disabled = true;
            }
            finalnum.innerHTML = goodsnumber;
        }

        deletegoods.parentNode.removeChild(deletegoods);
        var getCheckBox = document.getElementById(""depart"" + mydepart).getElementsByTagName('input');
        var k = 1;
        for (; k < getCheckBox.length; k++) {
            whichObj = getCheckBox[k];

            if (whichObj.type == ""checkbox"") {
                break;
            }
        }
        CheckSameDepart(id.substr(6, 3));
        if (k == getCheckBox.length) {
            var deletedepart = document.getElementById(""depart"" + mydepart);
            deletedepart.parentNode.removeChild(deletedepart);");
            WriteLiteral(@"
        }

         


        $.post(""/Cart/DeleteItem"", { i_id: item_id }, function (text) {
            alert(text);
        });

    }
    function Deleteselect(id) {
        var chks = $(""input:checked"");
        for (var i = 0; i < chks.length; i++) {
            if (chks[i].id == ""all"" || chks[i].id == null) {
                continue;
            }
            else if (!isNaN(chks[i].id.substr(-4, 4))) {

                var deletegoods = document.getElementById(""delete"" + chks[i].id.substr(3, 6));

                Deletegoods(deletegoods.id);

            }
        }
        goodsnumber = 0;
        pricenumber = 0;
        finalnum.innerHTML = goodsnumber;
        finalprice.innerHTML = pricenumber;
        confirmbuy.disabled = true;
        //修改开始
        document.getElementById(""all"").checked = false;
        document.getElementById(""all2"").checked = false;
        //修改结束
    }
    function CheckSameDepart(departid) {
        var getCheckBox = document.getEleme");
            WriteLiteral(@"ntById(""depart"" + departid).getElementsByTagName('input');
        var i = 1
        for (; i < getCheckBox.length; i++) {
            if (getCheckBox[i].type == ""checkbox"" && !getCheckBox[i].checked) {
                return false;
            }
        }
        getCheckBox[0].checked = true;

        CheckAll();

    }
    function CheckAll() {

        var getCheckBox = document.getElementsByTagName('input');
        if (getCheckBox.length == 4) {
            document.getElementById(""nonemessage"").style.display = ""block"";
        }
        for (var i = 2; i < getCheckBox.length - 1; i++) {
            if (getCheckBox[i].type == ""checkbox"" && !getCheckBox[i].checked) {
                return false;
            }
        }
        document.getElementById(""all"").checked = true;
        document.getElementById(""all2"").checked = true;
    }
    function Purchase() {
        $('.ui.basic.modal').modal('show');
    }
    //跳转到pay，信息传输
    function Topay() {
        var goodslist = ");
            WriteLiteral(@"new Array();
        var numberlist = new Array();
        var chks = $(""input:checked"");
        for (var i = 0; i < chks.length; i++) {
            if (!isNaN(chks[i].id.substr(-4, 4))) {
                var buygoods = document.getElementById(""myid"" + chks[i].id.substr(3, 6));
                var buynumber = document.getElementById(""number"" + chks[i].id.substr(3, 6));
                goodslist.push(buygoods.innerHTML);
                numberlist.push(buynumber.value);              
            }
        }
        twoArgsPost(""/Pay/Pay"", goodslist, ""i_ids"", numberlist, ""amounts"");
    }
    if (""0"" == ");
            EndContext();
            BeginContext(17330, 9, false);
#line 409 "E:\2--practice\vs\c#\DBPro\DBPro\Views\Cart\Cart.cshtml"
          Write(ItemCount);

#line default
#line hidden
            EndContext();
            BeginContext(17339, 96, true);
            WriteLiteral(") {\r\n        document.getElementById(\"nonemessage\").style.display = \"block\";\r\n    }\r\n</script>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<List<CartViewModels>>> Html { get; private set; }
    }
}
#pragma warning restore 1591
