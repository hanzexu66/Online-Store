@{
    ViewData["Title"] = "Order";
}
@model List<OrderViewModel>


<div class="ui grid container">
    <div class="two wide column">
        <div class="ui massive vertical menu">
            <div class="item">
                <div class="header">我的订单</div>
                <div class="menu">
                    <a class="active item" id="All" onclick="ChangeOrderView(this.id)">全部订单</a>
                    <a class="item" id="WaitDeliver" onclick="ChangeOrderView(this.id)">待发货</a>
                    @*<a class="item" id="WaitReceive" onclick="ChangeOrderView(this.id)">待收货</a>*@
                    @*<a class="item" id="WaitPay" onclick="ChangeOrderView(this.id)">待付款</a>*@
                    <a class="item" id="WaitComment" onclick="ChangeOrderView(this.id)">待评价</a>
                    <a class="item" id="Finish" onclick="ChangeOrderView(this.id)">已完成</a>
                    @*<a class="item" id="WaitRefund" onclick="ChangeOrderView(this.id)">待退款</a>
                    <a class="item" id="Refunded" onclick="ChangeOrderView(this.id)">已退款</a>*@
                </div>
            </div>
        </div>
    </div>
    <div class="twelve wide column">
        <div class="ui black segment" id="OrderList" style="display:block">
            @*没有订单时显示的界面*@
            <div class="ui red center aligned segment" id="Empty" style="display:block">
                <br /><br />
                <p>您现在还没有订单，快去买买买吧！</p>
                <br /><br />
                @*<img class="ui centered large image" src="">*@
            </div>
            @*订单的for应放于此*@
            @{ 


                    for (int i=0;i<Model.Count();++i)
                    {
            <div class="ui red segment" id=@string.Format("Order{0:D3}",i) style="display:block">
                @*订单001*@
                <div class="ui grid">
                    <div class="row">
                        <a class="ui red image label">
                            <i class="clipboard outline icon"></i>订单状态 <div class="detail">@DBPro.Entity.Order.OrderStateConvert[Model[i].orderState]</div>
                        </a>
                    </div>
                </div>
                @*商店的for应放于此*@
                @foreach (var shop in Model[i].DSItem)
                {
                    <div class="ui grid" style="background-color:#f7f7f7;">
                        @*订单001商店001*@
                        <div class="row">
                            <div class="fourteen wide  column">
                                <a style="color:#000000;">@shop.Value[0].shopName</a>
                            </div>
                        </div>
                    </div>
                    <div class="ui hiden grid">
                        @*订单001商店001商品列表*@
                        @*商品的for应放于此*@
                        @for(int k=0;k<shop.Value.Count();++k)
                        {
                            <div class="row" id="@string.Format("goods{0:D3}{1:D3}",i,k)">
                            @*订单001商店001商品001*@
                            <div class="four wide hidden column">
                                <img class="ui small image" src="@shop.Value[k].imagePath">
                            </div>
                            <div class="six wide hidden column">
                                @shop.Value[k].itemName
                            </div>
                            <div class="three wide hidden column">
                                @shop.Value[k].itemPrice
                            </div>
                            <div class="one wide hidden column">
                                @shop.Value[k].itemAmount
                            </div>
                            <div class="two wide hidden column">
                                @*<a class="small ui button" name="evaluate" >评价</a>*@
                                <div class="small ui button" name="evaluate" onclick="evaluateItem()" id="@shop.Value[k].itemID">评价</div>
                            </div>
                        </div>

                        }
                        
                    </div>
                }

                <div class="ui hiden grid">
                    <div class="row" style="background-color:#f7f7f7;">
                        @*底部按钮栏*@
                        <div class="nine wide hidden column">
                        </div>
                        <div class="seven wide hidden column">
                            <a tabindex="0" class="ui animated  button" name="Look" onclick="viewOrder()" id="@Model[i].orderID">
                                <div class="visible content">查看订单</div>
                                <div class="hidden content">
                                    <i class="eye icon"></i>
                                </div>
                            </a>
                            <div tabindex="0" class="ui animated fade button" name="Delete" onclick="DeleteEnsure(this.id)" id="@string.Format("{0:D3}",i)" >
                                <div hidden id="@string.Format("ModelOrderID{0:D3}",i)">@Model[i].orderID</div>
                                <div class="visible content">删除订单</div>
                                <div class="hidden content">
                                    <i class="trash alternate icon"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                }
            }
        </div>
    </div>
</div>

<div class="ui basic modal">
    <div class="ui icon header">
        <i class="trash alternate outline icon"></i>
        您确定要删除此订单吗？
    </div>

    <div class="actions">
        <div class="ui red basic cancel inverted button">
            <i class="remove icon" id="CancelDelete"></i>
            取消
        </div>
        <div class="ui green ok inverted button" onclick="DeleteOrder()">
            <i class="checkmark icon"></i>
            确定
        </div>
    </div>
</div>

<script>
    function CheckNotEmpty() {
        var re = /\s/;
        var Childs = document.getElementById("OrderList").childNodes;
        for (var i = 0; i < Childs.length; i++) {
            var node = Childs[i];
            // nodetype 和 re的正则匹配
            if (node.nodeType == 3 && re.test(node.nodeValue)) {
                node.parentNode.removeChild(node);
            }
        }//去除空文本节点
        var displaynum = 0;
        for (var i = 1; i < Childs.length; i++) {
            var node = Childs[i];
            if (node.style.display == "block") {
                displaynum++;
            }
        }
        console.log(Childs.length);
        console.log(displaynum);
        if (displaynum == 0) {
            return 0;
        }
        else {
            return 1;
        }
    }
    function OrderEmpty() {
        if (CheckNotEmpty()) {
            document.getElementById("Empty").style.display = "none";
        }
        else {
            document.getElementById("Empty").style.display = "block";
        }
    }
    function DeleteOrder() {
        //console.log(deleteid);
        var deleteorder = document.getElementById(deleteid);
        deleteorder.parentNode.removeChild(deleteorder);
        OrderEmpty();

        $.ajax({
            type: "post",
            url: "/Order/deleteOrder",
            data: {
                o_id: deleteOrder_id
            },
            success: function (result) {
                alert(result);
            }
        });
    }
    function ChangeOrderView(id) {
        var StateList = document.querySelectorAll(".detail");
        var i = 0;
        if (id == "WaitPay") {
            for (i = 0; i < StateList.length; i++) {
                var OrderX = StateList[i].parentNode.parentNode.parentNode.parentNode;
                if (StateList[i].innerText == "待付款") {

                    OrderX.style.display = "block";
                }
                else {
                    OrderX.style.display = "none";
                }
            }
        }
        else if (id == "All") {
            for (i = 0; i < StateList.length; i++) {
                var OrderX = StateList[i].parentNode.parentNode.parentNode.parentNode;
                OrderX.style.display = "block";
            }
        }
        else if (id == "WaitDeliver") {
            for (i = 0; i < StateList.length; i++) {
                var OrderX = StateList[i].parentNode.parentNode.parentNode.parentNode;
                if (StateList[i].innerText == "待发货") {
                    OrderX.style.display = "block";
                }
                else {
                    OrderX.style.display = "none";
                }
            }
        }
        else if (id == "WaitReceive") {
            for (i = 0; i < StateList.length; i++) {
                var OrderX = StateList[i].parentNode.parentNode.parentNode.parentNode;
                if (StateList[i].innerText == "待收货") {
                    OrderX.style.display = "block";
                }
                else {
                    OrderX.style.display = "none";
                }
            }
        }
        else if (id == "WaitComment") {
            for (i = 0; i < StateList.length; i++) {
                var OrderX = StateList[i].parentNode.parentNode.parentNode.parentNode;
                if (StateList[i].innerText == "待评价") {
                    OrderX.style.display = "block";
                }
                else {
                    OrderX.style.display = "none";
                }
            }
        }
        else if (id == "Finish") {
            for (i = 0; i < StateList.length; i++) {
                var OrderX = StateList[i].parentNode.parentNode.parentNode.parentNode;
                if (StateList[i].innerText == "已完成") {
                    OrderX.style.display = "block";
                }
                else {
                    OrderX.style.display = "none";
                }
            }
        }
        else if (id == "WaitRefund") {
            for (i = 0; i < StateList.length; i++) {
                var OrderX = StateList[i].parentNode.parentNode.parentNode.parentNode;
                if (StateList[i].innerText == "待退款") {
                    OrderX.style.display = "block";
                }
                else {
                    OrderX.style.display = "none";
                }
            }
        }
        else if (id == "Refunded") {
            for (i = 0; i < StateList.length; i++) {
                var OrderX = StateList[i].parentNode.parentNode.parentNode.parentNode;
                if (StateList[i].innerText == "已退款") {
                    OrderX.style.display = "block";
                }
                else {
                    OrderX.style.display = "none";
                }
            }
        }
        OrderEmpty();
    }
    function Inti() {
        var OrderList = document.querySelectorAll(".ui.red.segment");
        var Button1 = document.getElementsByName("evaluate");
        var Button2 = document.getElementsByName("Delete");
        for (var i = 0; i < Button1.length; i++) {
            var Order1 = Button1[i].parentNode.parentNode.parentNode.parentNode;
            var State = Order1.children[0].children[0].children[0].children[1];
            //console.log(Order1);
            //console.log(State.innerText);
            if (State.innerText == "待评价") {
                Button1[i].style.display = "true";
            }
            else {
                Button1[i].style.display = "none";
            }
        }
        for (var i = 0; i < Button2.length; i++) {
            var Order1 = Button1[i].parentNode.parentNode.parentNode.parentNode;
            var State = Order1.children[0].children[0].children[0].children[1];
            //console.log(Order1);
            //console.log(State.innerText);
            if (State.innerText == "待收货" || State.innerText == "待发货" || State.innerText == "待退款") {
                Button2[i].style.display = "none";
            }
            else {
                Button2[i].style.display = "true";
            }
        }
    }
    OrderEmpty();
    Inti();
</script>
<script>
    function viewOrder() {

        // alert(event.currentTarget.id);
        var o_id = event.currentTarget.id;
        standardPost("/Order/OrderDetail", o_id, "o_id");
    }
</script>
<script>
    var deleteid;//当前被选中删除的订单的id
    var deleteOrder_id;
    function DeleteEnsure(id) {

        deleteOrder_id = document.getElementById("ModelOrderID" + id).innerHTML;
        //console.log(id);
        deleteid = "Order" + id;
        //console.log(deleteid);
        $('.ui.basic.modal')
            .modal('show')
            ;

    }
</script>
<script>
    function evaluateItem() {
        var itemid = event.currentTarget.id;
        standardPost("/Evaluate/Evaluate", itemid, "i_id");
    }
</script>
